<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
 
 
    
    <SolidColorBrush x:Key="Title.Static.Background" Color="#FF333333"/>
    <SolidColorBrush x:Key="Title.Static.Foreground" Color="White"/>
    
    
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FF333333"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF333333"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="White"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="White"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

    <!--关闭按钮的样式-->
    <Style x:Key="CloseStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <!--<Setter Property="BorderBrush" Value="Wheat"/>
        <Setter Property="Foreground" Value="RosyBrown"/>-->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip" Value="关闭"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="grid_content" Background="{TemplateBinding Background}">
                        <Grid VerticalAlignment="Center">
                            <Path x:Name="btnPath1" Stroke="Gray"  StrokeThickness="3" Data="M0,0 L12,12" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Path x:Name="btnPath2" Stroke="Gray"  StrokeThickness="3" Data="M12,0 L0,12" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnPath1" Property="Stroke" Value="White"/>
                            <Setter TargetName="btnPath2" Property="Stroke" Value="White"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <!--<Condition Property="IsMouseOver" Value="true"/>-->
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="btnPath1" Property="Stroke" Value="Gray"/>
                                <Setter TargetName="btnPath2" Property="Stroke" Value="Gray"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--最小化按钮样式-->
    <Style x:Key="MinimizeStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <!--<Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>-->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip" Value="最小化"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="grid_content" Background="{TemplateBinding Background}">
                        <Path x:Name="btnPath" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="Gray" StrokeThickness="3" Data="M0,0 13,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" Value="Gray" TargetName="btnPath"/>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" Value="White" TargetName="btnPath"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <!--<Condition Property="IsMouseOver" Value="true"/>-->
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" Value="Gray" TargetName="btnPath"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>
    
    <!--最大化按钮样式-->
    <Style x:Key="MenuStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <!--<Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>-->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ToolTip" Value="设置"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="grid_content" Background="{TemplateBinding Background}">
                        <Path x:Name="btnPath"  HorizontalAlignment="Center" VerticalAlignment="Center"  StrokeThickness="3" Stroke="Gray" Fill="#FF3E3E40">
                            <Path.Data>
                                <GeometryGroup>
                                    <PathGeometry Figures="M 0,05 L 13,05"/>
                                    <PathGeometry Figures="M 0,00 L 13,00"/>
                                    <PathGeometry Figures="M 0,10 L 13,10"/>                                    
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" Value="Gray" TargetName="btnPath"/>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" Value="White" TargetName="btnPath"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <!--<Condition Property="IsMouseOver" Value="true"/>-->
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" Value="Gray" TargetName="btnPath"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>

   

 
</ResourceDictionary>